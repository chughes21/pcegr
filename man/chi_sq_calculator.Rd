% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expected_counts_function.R
\name{chi_sq_calculator}
\alias{chi_sq_calculator}
\title{The Chi Square calculator function.}
\usage{
chi_sq_calculator(
  data,
  mod,
  limit = 4,
  min_exp = 5,
  variable_time = TRUE,
  zip = FALSE,
  dec_place = NA
)
}
\arguments{
\item{data}{A data set, where the observed count vector and time vector (if variable) are the last two columns}

\item{mod}{A StagedTree model fit to the data set, as produced by pceg() or zipceg().}

\item{limit}{An integer where the number of event counts greater than or equal to this integer are grouped together.}

\item{min_exp}{An integer specifying the minimum expected count necessary for its chi square contribution to be considered.}

\item{variable_time}{A logical value indicating whether the observed time is uniform (FALSE) or variable (TRUE).}

\item{zip}{A logical value indicating whether the model specified is zero-inflated (TRUE) or not (FALSE).}

\item{dec_place}{An integer value detailing how many decimal places the outputs should be rounded to. If NA, no rounding will occur.}
}
\value{
A list of three matrices and a numeric value. The first matrix is the observed count matrix, the second is the expected count matrix, and the third is the chi-squared contribution matrix.The numeric value is the sum of the chi square contributions.
}
\description{
This function tests the goodness of fit of a pceg model to a data set using a Chi squared calculation.
}
\details{
For each leaf stage in a pceg model created by \code{\link[=pceg]{pceg()}}, this function calculates the observed event counts up to some integer limit, and then calculates
the expected event counts for that leaf based on the model estimates of the parameters for the Poisson distribution. Then, for each leaf $i$ and each event count $j$,
a chi-square contribution is calculated using the formula \eqn{\frac{(O_{ij}-E_{ij})^2}{E_{ij}}} and output as a matrix.
}
\examples{
mod1<-pceg(knee_pain_obs,2,TRUE,TRUE)
chi_sq_calculator(knee_pain_obs,mod1,zip=FALSE)

mod2<-zipceg(knee_pain_obs,"nlm",variable_time=TRUE)
chi_sq_calculator(knee_pain_obs,mod2)
}
